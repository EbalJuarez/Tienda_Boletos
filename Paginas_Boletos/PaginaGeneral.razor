@page "/general"
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@using PaginaDeBoletos
@using PaginaDeBoletos.Clases

<PageTitle>Pagina general</PageTitle>

<EditForm Model="@boleto" OnValidSubmit="@guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="Contenedor-sesion">
        <div class="form-container">
            <p class="title">Compra General</p>
            <div class="form">
                <div class="input-group">
                    <label for="nombre">Nombre:</label>
                    <InputText placeholder="" id="nombre" @bind-Value="boleto.Nombre" style="width: 100%; border-radius: 0.375rem; border: 1px solid rgba(55, 65, 81, 1); outline: 0; background-color: rgba(17, 24, 39, 1); padding: 0.75rem 1rem; color: rgba(243, 244, 246, 1);" />
                    <ValidationMessage For="() => boleto.Nombre" />
                </div>
                <div class="input-group">
                    <label for="dpi">DPI:</label>
                    <InputText placeholder="" id="dpi" @bind-Value="boleto.DPI" style="width: 100%; border-radius: 0.375rem; border: 1px solid rgba(55, 65, 81, 1); outline: 0; background-color: rgba(17, 24, 39, 1); padding: 0.75rem 1rem; color: rgba(243, 244, 246, 1);" />
                    <ValidationMessage For="() => boleto.DPI" />
                    <label for="correo">Correo electronico:</label>
                    <InputText placeholder="" id="correo" @bind-Value="boleto.Correo" style="width: 100%; border-radius: 0.375rem; border: 1px solid rgba(55, 65, 81, 1); outline: 0; background-color: rgba(17, 24, 39, 1); padding: 0.75rem 1rem; color: rgba(243, 244, 246, 1);" />
                    <ValidationMessage For="() => boleto.Correo" />
                    <label for="correo">Cantidad boletos:</label>
                    <InputNumber placeholder="" id="correo" @bind-Value="cantidadboletos" style="width: 100%; border-radius: 0.375rem; border: 1px solid rgba(55, 65, 81, 1); outline: 0; background-color: rgba(17, 24, 39, 1); padding: 0.75rem 1rem; color: rgba(243, 244, 246, 1);" />
                    <ValidationMessage For="() => cantidadboletos" />
                </div>
                <button style="margin-top:6%;" class="sign" type="submit">Comprar</button>
            </div>
            <div class="social-message">
                <div class="line"></div>
                <p class="message">Ingrese los datos solicitados</p>
                <div class="line"></div>
            </div>
        </div>
    </div>
</EditForm>

<p style="color: red;">
    @if (Boletos.Total_Boletos == 0)
    {
        <div style="background-color: #ffdddd; padding: 10px; border: 1px solid red; color: red;">
            ¡No quedan boletos disponibles en esta zona!
        </div>

    }
</p>

@code {
    private int cantidadboletos;
    private General boleto = new General();
    private List<General> Lista_Boletos_General = new List<General>();

    private void guardar()
    {
        boleto.Fecha_Compra = DateTime.Now;
        if (Boletos.Total_Boletos > 0)
        {
            Transaccion.Cola_Transacciones.Enqueue(boleto);
            Boletos Cola = Transaccion.Cola_Transacciones.Dequeue();
            General.Total_Boletos = General.Total_Boletos - cantidadboletos;
            Estadio.Asientos_General.Add((General)Cola);
            localStorage.SetItem("starships", Lista_Boletos_General);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        // Recuperar la lista de starships desde LocalStorage a una variable var
        var savedStarships = localStorage.GetItem<List<General>>("starships");

        // Validar si la lista fue recuperada correctamente, copiarla a la lista
        if (savedStarships != null)
        {
            Lista_Boletos_General = savedStarships;
        }
    }
}